name: Manual Check
on: [workflow_dispatch]
jobs:
  check_release:
    name: Check Release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    
    #curl request to grab notification data (populates data.json with only unread notifs)
      - name: getting notification data
        run: |
          curl -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.notification_check }}" \
          https://api.github.com/notifications -o data.json
          
    #parse for two fields at the moment: type (looking for release here) and repo (repository name)
      - name: parse notif
        id: parsed
        run: |
          echo "type=$(jq -r '.[].subject.type' data.json)" >> $GITHUB_OUTPUT
          echo "repo=$(jq -r '.[].repository.name' data.json)" >> $GITHUB_OUTPUT
          echo "title=$(jq -r '.[].repository.title' data.json)" >> $GITHUB_OUTPUT
        #  echo $(jq -r '.[].subject.type' data.json)
        #  echo $(jq -r '.[].repository.name' data.json)
        #run: echo '::set-output name=type ::'$(jq -r '.[].subject.type' data.json)
       
    
    #concept is to take these two values, write conditional statement based around the type and repo
    #if the type and repo match the watched repo name and is a release, then generate an issue for the release.
    #see workflow "Automate Issue Creation" for that logic, append here:
