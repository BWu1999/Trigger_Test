name: Manual Check
on: [workflow_dispatch]
jobs:
  check_release:
    name: Check Release
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    
    #curl request to grab notification data (populates data.json with only unread notifs)
      - name: getting notification data
        run: |
          curl -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.notification_check }}" \
          https://api.github.com/notifications -o data.json
          
    #parse for two fields at the moment: type (looking for release here) and repo (repository name)
      - name: parse notif
        id: parsed
        run: |
          types=($(jq -r '.[].subject.type' data.json))
          repos=($(jq -r '.[].repository.name' data.json))
          threadids=($(jq -r '.[].subject.id' data.json))
          declare -i count=0
          for i in "${types[@]}"
            do
              if [[ "$i" == *"Release"* ]]
              then
                echo "relBool=true" >> $GITHUB_ENV
                echo "repo=${repos[$count]}" >> $GITHUB_ENV
                echo "threadID=${threadids[$count]}" >> GITHUB_ENV
                echo "${threadids[$count]}"
              fi
              count+=1
            done
        #  types=($(jq -r '.[].subject.type' data.json))
        #  echo ${types[0]}
        #  echo $(jq -r '.[].subject.type' data.json)
        #  echo $(jq -r '.[].repository.name' data.json)
        #run: echo '::set-output name=type ::'$(jq -r '.[].subject.type' data.json)

      - name: create issue
        if: ${{ env.relBool == 'true' }}
        uses: imjohnbo/issue-bot@v3
        with:
          assignees: "BWu1999"
          labels: "new_release"
          title: ${{ env.repo }}
          body: |
            - [ ] Release Task 1
            - [ ] Release Task 2
            - [ ] Release Task 3

            ### Discussion Points
            Add things to discuss below
          pinned: false
          close-previous: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: clean
        if: ${{ env.relBool == 'true' }}
        run: |
          curl \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.notification_check }}" \
          https://api.github.com/notifications/threads/${{ env.threadID }}
        
    #concept is to take these two values, write conditional statement based around the type and repo
    #if the type and repo match the watched repo name and is a release, then generate an issue for the release.
